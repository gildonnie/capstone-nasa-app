{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst initialState = {\n  data: {},\n  loading: true,\n  error: false\n};\nexport const fetchData = createAsyncThunk('data/fetchData', async () => {\n  const dataRes = await axios.get(`https://api.nasa.gov/planetary/apod?&api_key=${apiKey}`);\n  return dataRes.data;\n});\nexport const apodSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    builder.addCase(fetchData.pending, state => {\n      state.error = false;\n      state.loading = true;\n      state.data = {};\n    }).addCase(fetchData.fulfilled, (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.error = false;\n      state.loading = false;\n      state.data = payload;\n    }).addCase(fetchData.rejected, state => {\n      state.error = true;\n      state.loading = false;\n      state.data = {};\n    });\n  }\n\n});\nexport default apodSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","apiKey","process","env","REACT_APP_API_KEY","initialState","data","loading","error","fetchData","dataRes","get","apodSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","reducer"],"sources":["C:/Users/gildo/capstone-nasa-app/client/src/store/apodSlice.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\ntype dataApod = {\n  data: any;\n  loading: boolean;\n  error: boolean;\n}\n\nconst initialState = {\n  data: {},\n  loading: true,\n  error: false,\n} as dataApod;\n\nexport const fetchData = createAsyncThunk(\n  'data/fetchData',\n  async () => {\n    const dataRes = await axios\n      .get(`https://api.nasa.gov/planetary/apod?&api_key=${apiKey}`);\n    return dataRes.data;\n  },\n);\n\nexport const apodSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.error = false;\n        state.loading = true;\n        state.data = {};\n      })\n      .addCase(fetchData.fulfilled, (state, { payload }) => {\n        state.error = false;\n        state.loading = false;\n        state.data = payload;\n      })\n      .addCase(fetchData.rejected, (state) => {\n        state.error = true;\n        state.loading = false;\n        state.data = {};\n      });\n  },\n});\n\nexport default apodSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AAQA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EADa;EAEnBC,OAAO,EAAE,IAFU;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,SAAS,GAAGV,gBAAgB,CACvC,gBADuC,EAEvC,YAAY;EACV,MAAMW,OAAO,GAAG,MAAMV,KAAK,CACxBW,GADmB,CACd,gDAA+CV,MAAO,EADxC,CAAtB;EAEA,OAAOS,OAAO,CAACJ,IAAf;AACD,CANsC,CAAlC;AASP,OAAO,MAAMM,SAAS,GAAGd,WAAW,CAAC;EACnCe,IAAI,EAAE,MAD6B;EAEnCR,YAFmC;EAGnCS,QAAQ,EAAE,EAHyB;;EAInCC,aAAa,CAACC,OAAD,EAAU;IACrBA,OAAO,CACJC,OADH,CACWR,SAAS,CAACS,OADrB,EAC+BC,KAAD,IAAW;MACrCA,KAAK,CAACX,KAAN,GAAc,KAAd;MACAW,KAAK,CAACZ,OAAN,GAAgB,IAAhB;MACAY,KAAK,CAACb,IAAN,GAAa,EAAb;IACD,CALH,EAMGW,OANH,CAMWR,SAAS,CAACW,SANrB,EAMgC,CAACD,KAAD,WAAwB;MAAA,IAAhB;QAAEE;MAAF,CAAgB;MACpDF,KAAK,CAACX,KAAN,GAAc,KAAd;MACAW,KAAK,CAACZ,OAAN,GAAgB,KAAhB;MACAY,KAAK,CAACb,IAAN,GAAae,OAAb;IACD,CAVH,EAWGJ,OAXH,CAWWR,SAAS,CAACa,QAXrB,EAWgCH,KAAD,IAAW;MACtCA,KAAK,CAACX,KAAN,GAAc,IAAd;MACAW,KAAK,CAACZ,OAAN,GAAgB,KAAhB;MACAY,KAAK,CAACb,IAAN,GAAa,EAAb;IACD,CAfH;EAgBD;;AArBkC,CAAD,CAA7B;AAwBP,eAAeM,SAAS,CAACW,OAAzB"},"metadata":{},"sourceType":"module"}